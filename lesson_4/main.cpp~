// lesson_4

// coded by Sudakov Andrey

/*
1
Написать программу, проверяющую что сумма двух (введенных с клавиатуры) чисел 
лежит в пределах от 10 до 20 (включительно), если да – вывести строку "true", 
в противном случае – "false";
2
Написать программу, выводящую на экран строку “true”, если две целочисленные 
константы (или просто числа), объявленные в её начале либо обе равны десяти 
сами по себе, либо их сумма равна десяти. Иначе "false".
3
Написать программу которая выводит на экран список всех нечетных чисел он 1 до 50. 
Например: "Your numbers: 1 3 5 7 9 11 13 …". Для решения используйте любой С++ цикл.
4*
Написать программу, проверяющую, является ли некоторое число - простым. 
Простое число — это целое положительное число, которое делится без остатка только 
на единицу и себя само. Пример простого числа 17, не простого 33 (делется на 3 и 11).
5*
Пользователь вводит с клавиатуры число (год): от 1 до 3000. Написать программу, 
которая определяет является ли этот год високосным. Каждый 4-й год является 
високосным, кроме каждого 100-го, при этом каждый 400-й – високосный. 
Вывести результаты работы программы в консоль.
 */

#include <iostream>
#include <cmath>

// task 1
bool isTenToTwenty(int* pN1, int* pN2)
// take two pointers to two int numbs
// return bool: (n1+n2) in [10; 20]
{
  if ((*pN1 + *pN2) >= 10 && (*pN1 + *pN2) <= 20)
    {
      return true;
    }
  else
    {
      return false;
    }
}

int main()
{/*
  // TASK 1
  std::cout << "########## TASK 1 - (n1+n2) in [10; 20]" << std::endl;

  // declaring
  int n1, n2;
  bool taskAnswer1;
  
  // user input
  std::cout << "Enter the first number: ";
  std::cin >> n1;
  std::cout << "Enter the second number: ";
  std::cin >> n2;

  // func using
  taskAnswer1 = isTenToTwenty(&n1, &n2);

  // print to console
  std::cout << "Amount of " << n1 << " and " << n2 \
	    << ((taskAnswer1) ? " is " : " is not ") \
	    << "in the limit [10; 20]" << std::endl;
  //cin>>get

  // TASK 2
  std::cout << "########## TASK 2 - (n1 == 10 && n2 == 10) || ((n1+n2) == 10)" << std::endl;

  // declaring
  int nA, nB;
  const int TEN = 10;
  bool taskAnswer2 = false; // fefault

  // user input
  std::cout << "Enter the first number: ";
  std::cin >> nA;
  std::cout << "Enter the second number: ";
  std::cin >> nB;

  // condition
  if ((nA == TEN && nB == TEN) || (nA+nB == TEN))
    {
      taskAnswer2 = true;
    }
  
  //print to console
  std::cout << "Answer: " << ((taskAnswer2) ? "true" : "false") << std::endl;

  // TASK 3
  std::cout << "########## TASK 3 - odd numbers from x1 to x2" << std::endl;

  // declaring
  int x1, x2, x1_isEven;

  // user input
  std::cout << "Enter the first number: ";
  std::cin >> x1;
  std::cout << "Enter the second number: ";
  std::cin >> x2;
  x1_isEven = (x1 % 2 == 0) ? 1 : 0;

  // print to console
  std::cout << "Odd numbers: ";
  // None odd numbers
  if (x1 >= x2) 
    {
      std::cout << "None";
    }
  // main cycle
  for (x1; x1 < x2; x1+=2)
    {
      std::cout << x1 + x1_isEven << ' ';
    }
  // exclusive situation when x1 & x2 are odd
  if ((x1%2 == 1) &&  (x2%2 == 1)) 
    {
      std::cout << x1;
    }
  std::cout << std::endl;
 */
  // TASK 4*
  std::cout << "########## TASK 4 - prime number" << std::endl;

    // 1. if number is even than composite
  int n = 1;
  while (n)
    {
      std::cout << "n = ";
      std::cin >> n;
      std::cout << "M_n = 2^n - 1 = " << pow(2,n)-1 << std::endl;
    }
  
  
  return 0;
}
